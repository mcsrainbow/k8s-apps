---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ops-podscleanup-role
rules:
  - apiGroups: ["apps"]
    resources: ["pods", "deployments"]
    verbs: ["get", "list", "delete"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: ops-dev
  name: ops-podscleanup-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ops-podscleanup-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ops-podscleanup-role
subjects:
  - kind: ServiceAccount
    namespace: ops-dev
    name: ops-podscleanup-account
---
apiVersion: batch/v1
kind: CronJob
metadata:
  namespace: ops-dev
  name: ops-podscleanup-etrans
spec:
  schedule: "0 */8 * * *"
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 1
  jobTemplate:
    backoffLimit: 1
    spec:
      template:
        spec:
          serviceAccountName: ops-podscleanup-account
          containers:
            - name: ops-podscleanup-etrans
              image: bitnami/kubectl:1.27.5
              env:
                - name: TZ
                  value: "Asia/Shanghai"
              command:
                - /bin/sh
                - -c
                - |-
                  echo "INFO: PodsCleanup Started"
                  deployments=$(kubectl get deployments --all-namespaces --no-headers -o custom-columns=":metadata.name,:metadata.namespace,:metadata.creationTimestamp" \
                    | grep ^etrans- | awk '{print $1, $2, $3}' | while read deployment namespace date; do
                    current=$(date +%s)
                    start=$(date --date="$date" +%s)
                    age_hours=$(( (current - start) / 3600 ))
                    if [ $age_hours -gt 2 ]; then
                      echo $deployment $namespace
                    fi
                  done)
                  if [ ! -z "$deployments" ]; then
                    echo $deployments | while read deployment namespace; do
                      echo "INFO: kubectl delete deployment $deployment -n $namespace"
                      kubectl delete deployment $deployment -n $namespace
                    done
                  fi
                  echo "INFO: PodsCleanup Completed"
          restartPolicy: OnFailure
          imagePullSecrets:
            - name: ops-podscleanup-gitlab
