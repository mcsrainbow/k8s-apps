---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: bu-project-uat
  name: bu-project-apiproxy-configmap
data:
  nginx.conf: |
    server {
      listen 80;
    
      location ^~ /api/v1/ {
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_pass https://api.uat.example.com/v1/;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.kubernetes.io/managed-by: Kustomization
  labels:
    app: apiproxy
  namespace: bu-project-uat
  name: bu-project-apiproxy-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apiproxy
  template:
    metadata:
      annotations:
        app.kubernetes.io/managed-by: Kustomization
      labels:
        app: apiproxy
    spec:
      terminationGracePeriodSeconds: 120
      imagePullSecrets:
        - name: bu-project-dockerregistry-secret
      volumes:
        - name: apiproxy-configmap-volume
          configMap:
            name: bu-project-apiproxy-configmap
      containers:
        - name: apiproxy
          image: registry.example.com/project/apiproxy:1.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              protocol: TCP
          env:
            - name: TZ
              value: Asia/Shanghai
          resources:
            requests:
              cpu: 125m
              memory: 256Mi
            limits:
              cpu: 125m
              memory: 256Mi
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 60"]
          volumeMounts:
            - name: apiproxy-configmap-volume
              mountPath: /etc/nginx/conf.d
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.kubernetes.io/managed-by: Kustomization
  labels:
    app: apiproxy
  namespace: bu-project-uat
  name: bu-project-apiproxy-svc
spec:
  clusterIP: None
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: apiproxy
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    app.kubernetes.io/managed-by: Kustomization
  labels:
    app: apiproxy
  namespace: bu-project-uat
  name: bu-project-apiproxy-ingress
spec:
  ingressClassName: nginx
  rules:
    - host: web.uat.example.com
      http:
        paths:
          - path: /api/v1/
            pathType: Prefix
            backend:
              service:
                name: bu-project-apiproxy-svc
                port:
                  number: 80
